@model IEnumerable<MerchantMVC.ViewModels.CardViewModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "Merchant Card Holders";
    Layout = "_LayoutV";
}

<link href="~/css/PagedList.css" rel="stylesheet" type="text/css" />

<h2>Merchant Card Holders</h2>

@*<p>
        <a asp-action="Create">+ Add New Location</a>
    </p>*@

<form asp-action="Index" method="get">
    <div class="row">
        <div class="col-6 justify-content-start">
            <div class="form-actions no-color">
                <p>
                    Find by Name/Card Number: <input type="text" name="SearchString" value='@ViewData["CurrentFilter"]' />
                    <input type="submit" value="Search" class="btn btn-default" /> | <a asp-action="Index">Back to Full List</a>
                </p>
            </div>
        </div>
        <div class="col-6 justify-content-end">
            <a href="ExportCardsToCsv" class="btn btn-outline-primary">Download to CSV</a>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AccountNumberSortParam"]">@Html.DisplayNameFor(model => model.AccountNumber)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ChFname)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LNameSortParam"]">@Html.DisplayNameFor(model => model.ChLname)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ChMphone)
            </th>
        </tr>
    </thead>
    <tbody>
        @if (ViewBag.OnePageOfCards != null)
        {
            @foreach (var item in ViewBag.OnePageOfCards)
            {
                @*<tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.AccountNumber)
                            @Html.HiddenFor(modelItem => item.CardId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ChFname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ChLname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ChMphone)
                        </td>
                    </tr>*@
                <tr>
                    <td>
                        @item.AccountNumber
                    </td>
                    <td>
                        @item.ChFname
                    </td>
                    <td>
                        @item.ChLname
                    </td>
                    <td>
                        @item.Email
                    </td>
                    <td>
                        @item.ChMphone
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td> No records found.</td>
            </tr>
        }
    </tbody>
</table>

@if (ViewBag.OnePageOfCards != null)
{
    <div class="mb-5">
        <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
        @Html.PagedListPager((IPagedList)ViewBag.OnePageOfCards, page => Url.Action("Index", new { page = page }))
    </div>
}