@model MerchantMVC.ViewModels.VirtualTerminalViewModel
@{
    ViewData["Title"] = "Virtual Terminal";
    Layout = "_LayoutV";
}


<h2>Virtual Terminal </h2>
<p> </p>


<form asp-action="Index" data-ajax-method="POST" asp-controller="VirtualTerminal">
    <div class="d-flex flex-column justify-content-start">

        <div class="form-group">
            <label id="lblLocation" class="control-label col-md-2">Location</label>
            <div class="col-md-5">
                <select id="LocationID" class="form-control" asp-for="LocationID" asp-items="@Model.LocationsList">
                    <option value="" hidden disabled selected>-- SELECT LOCATION --</option>
                </select>
                @*@Html.DropDownListFor(x => Model.SelectedLocation, new SelectList(Model.LocationsList, "Value", "Text"), "-- SELECT LOCATION --", new { @class = "form-control" })*@
                <span asp-validation-for="LocationID" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label id="lblTerminal" class="control-label col-md-2">Terminal</label>
            <div class="col-md-5">
                <select id="TerminalID" class="form-control" asp-for="TerminalID" asp-items="@Model.TerminalsList">
        </select>
                @*@Html.DropDownListFor(x => Model.SelectedTerminal, new SelectList(Model.TerminalsList, "Value", "Text"), "-- SELECT TERMINAL --", new { @class = "form-control"})*@
                <span asp-validation-for="TerminalID" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label id="lblTerminal" class="control-label col-md-2">Card Type</label>
            <div class="col-md-5">
                <select id="CardTypeID" class="form-control" asp-for="CardTypeID" asp-items="@Model.CardTypeList">
        </select>                
                @*@Html.DropDownListFor(x => Model.SelectedCardType, new SelectList(Model.CardTypeList, "Value", "Text"), "-- SELECT CARD TYPE --", new { @class = "form-control"})*@
            <span asp-validation-for="CardTypeID" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label id="lblTransactionCode" class="control-label col-md-2">Transaction Code</label>
            <div class="col-md-5">
                <select id="TransCodeID" class="form-control" asp-for="TransCodeID" asp-items="@Model.TransCodeList">
        </select>
                @*@Html.DropDownListFor(x => Model.SelectedTransCode, new SelectList(Model.TransCodeList, "Value", "Text"), "-- SELECT TRANSACTION CODE --", new { @class = "form-control"})*@
                <span asp-validation-for="TransCodeID" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label id="lblCardAccountNumber" class="control-label">Card Account Number</label>
            </div>
            <div class="col-md-5">
                @*<input id="CardAccountNumber" name="CardAccountNumber" class="form-control" asp-for="CardAccountNumber" type="text" />*@
                @Html.TextBoxFor(x => Model.CardAccountNumber, new { @class = "form-control" })
                <span asp-validation-for="CardAccountNumber" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label id="lblAmount" class="control-label col-md-2">Amount (XX.XX)</label>
            <div class="col-md-5">
                @*<input id="Amount" class="form-control" name="Amount" asp-for="Amount" type="number" />*@ 
                @Html.TextBoxFor(x => Model.Amount, new { @class = "form-control" })
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label id="lblReferenceID" class="control-label col-md-2">Reference ID</label>
            <div class="col-md-5">
                @*<input id="amount" class="form-control" name="ReferenceID" asp-for="ReferenceID" type="text" />*@
                @Html.TextBoxFor(x => Model.ReferenceID, new { @class = "form-control" })
                <span asp-validation-for="ReferenceID" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label id="lblReferenceType" class="control-label col-md-2">Reference Type</label>
            <div class="col-md-5">
                <select id="ReferenceType" class="form-control" asp-for="ReferenceType" asp-items="@Model.ReferenceTypeList">
        </select>
                @*@Html.DropDownListFor(x => Model.SelectedReferenceType, new SelectList(Model.ReferenceTypeList, "Value", "Text"), "", new { @class = "form-control"})*@
                <span asp-validation-for="ReferenceType" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label id="lblComments" class="control-label col-md-2">Comments</label>
            <div class="col-md-5">
                <textarea id="transactionComments" class="form-control" name="TransactionComments" asp-for="TransactionComments" rows="4"></textarea>
                <span asp-validation-for="TransactionComments" class="text-danger"></span>
            </div>
        </div>

        <div class="row d-flex justify-content-center align-content-center">
            <div class="form-group my-3">
                <input type="submit" value="Submit Transaction" class="btn btn-lg btn-primary px-5" />
            </div>
        </div>
        <div class="form-row">
            <div class="col">
                @if (ViewBag.message != null)
                {
                    <div class="@(ViewBag.message.Contains("success")? "alert alert-success alert-dismissible":"alert alert-danger alert-dismissible")">
                        <a href="#" aria-label="close" data-dismiss="alert" class="close">&times;</a>
                        @ViewBag.message
                    </div>
                }
            </div>
        </div>
    </div>
</form>


@section Scripts {
    Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $('#LocationID').change(function () {
            var selectedLocation = $("#LocationID").val();
            var terminalSelect = $("#TerminalID");
            terminalSelect.empty()
            $.ajax({
                type: 'GET',
                contentType: 'application/json',
                url: '/VirtualTerminal/GetTerminals',
                dataType: 'Json',
                data: { locationID: selectedLocation },
                success: function (data) {
                    terminalSelect.html("");
                    terminalSelect.append('<option value="0">' + "-- SELECT TERMINAL --" + '</option>');
                    for (var i = 0; i < data.length; i++) {
                        terminalSelect.append('<option value="' + data[i].id + '">' + data[i].text + '</option>');
                    }
                },
                error: function (xhr, status, error) {
                    var err = eval("(" + xhr.responseText + ")");
                    alert(err.Message);
                }
            });
        });

        $('#TerminalID').change(function () {
            var selectedTerminal = $("#TerminalID").val();

            var cardtypeSelect = $("#CardTypeID");
            $.ajax({
                type: 'GET',
                contentType: 'application/json',
                url: '/VirtualTerminal/GetCardTypes',
                dataType: 'Json',
                data: { terminalID: selectedTerminal },
                success: function (data) {
                    cardtypeSelect.html("");
                    cardtypeSelect.append('<option value="0">' + "-- SELECT CARD TYPE --" + '</option>');
                    for (var i = 0; i < data.length; i++) {
                        cardtypeSelect.append('<option value="' + data[i].id + '">' + data[i].text + '</option>');
                    }
                },
                error: function (xhr, status, error) {
                    var err = eval("(" + xhr.responseText + ")");
                    alert(err.Message);
                }
            });

            var tranCodeSelect = $("#TransCodeID");
            $.ajax({
                type: 'GET',
                contentType: 'application/json',
                url: '/VirtualTerminal/GetTransCodes',
                dataType: 'Json',
                data: { terminalID: selectedTerminal },
                success: function (data) {
                    tranCodeSelect.html("");
                    tranCodeSelect.append('<option value="0">' + "-- SELECT TRANSACTION CODE --" + '</option>');
                    for (var i = 0; i < data.length; i++) {
                        tranCodeSelect.append('<option value="' + data[i].id + '">' + data[i].text + '</option>');
                    }
                },
                error: function (xhr, status, error) {
                    var err = eval("(" + xhr.responseText + ")");
                    alert(err.Message);
                }
            });
        });

    </script>
}